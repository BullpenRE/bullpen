<style>
/*#showFindingTalentFilter {*/
/*position: fixed;*/
/*top: 60px;*/
/*left: 50px;*/
/*z-index: 1;*/
/*width: 18rem;*/
/*height: 100%;*/
/*}*/

/*.sidebar {*/
/*    background-color: blueviolet;*/
/*}*/

/*.sidebar-wrapper {*/
/*    overflow-y:auto;*/
/*    padding:0 8px;*/
/*}*/

/* we need below 3 lines data in order to see placeholder in initial select2 appearance, otherwise placeholder is absent */
/* these classes located inside of select2 service - https://stackoverflow.com/questions/28140705/select2-multiple-placeholder-does-not-work */
/* https://stackoverflow.com/questions/50696987/select2-does-not-show-placeholder-if-initially-hidden */
.select2-selection--multiple .select2-search__field{
    width:100%!important;
}
</style>

<div>
<!--  <div id="showFindingTalentFilter" class="collapse container">-->
  <div id="sidebar-left" class="sidebar container">
    <div class="sidebar-wrapper">
    <%= form_tag(employer_filter_freelancer_profiles_path, method: :post) do %>
    <div class="bp-card mb-0 px-2 pt-1 pb-5">
      <div class="card-header container-fluid p-0 bg-white border border-secondary border-0">
        <div class="row">
          <div class="col">
            <button type="button" class="close close-filter" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
        </div>
      </div>

      <!-- Skills-->
      <div class="form-group mb-4">
        <label for="findingTalentFilterSkillsMultiSelect" class="bp-input-label">
          Skills
        </label>
        <div class="w-100">
          <%= select_tag 'real_estate_skills_descriptions',
                         options_for_select(real_estate_skills),
                         multiple: 'multiple', class: 'select2', required: true %>
        </div>
      </div>

      <!--Sectors-->
      <div class="form-group mb-4">
        <label for="findingTalentFilterSectors" class="bp-input-label">
          Sectors
        </label>
        <div class="w-100">
          <%= select_tag 'sectors_descriptions',
                         options_for_select(sectors),
                         multiple: 'multiple', class: 'select2', required: true %>
        </div>
      </div>

      <!-- Software-->
      <div class="form-group mb-5">
        <label for="findingTalentFilterSoftwares" class="bp-input-label">
          Software
        </label>
        <div class="w-100">
          <%= select_tag 'softwares_descriptions',
                         options_for_select(softwares),
                         multiple: 'multiple', class: 'select2', required: true %>
        </div>
      </div>

      <!-- Buttons  -->
      <div class="d-flex justify-content-between">
        <button type="button" class="btn btn-outline-primary mr-1 reset-filters" id='reset-filters'>Reset Filters</button>
        <%= submit_tag 'Apply Filters', class: 'btn btn-primary apply-filters' %>
      </div>
    </div>
    <% end %>
  </div>
  </div>
</div>

<script>
  // Test of @ctrlmaniac/simpler-sidebar

  $(function() {
    $("#sidebar-left").simplerSidebar({
      quitter: "close-filter",
      toggler: "toggle-sidebar-left",
      open: true,
      align: 'left',
      top: 61,
      width: 300,
      gap: 0,
      zIndex: 3000,
      freezePage: false,
      animation: {
        duration: 500,
        easing: 'swing'
      },
      mask: {
        display: true,
        css: {
          backgroundColor: "black",
          opacity: 0,
          filter: "Alpha(opacity=0)",
        },
      },
      events: {
        onOpen: function () { console.log("onOpen triggered"); },
        afterOpen: function () { console.log("afterOpen triggered"); },
        onClose: function () { console.log("onClose triggered"); },
        afterClose: function () { console.log("afterClose triggered"); },
        always: function () { console.log("always triggered"); },
      },
    });
  });

  // $("#sidebar-left").simplerSidebar({
  //   mask: {
  //     display: true,
  //     css: {
  //       backgroundColor: "black",
  //       opacity: 0.5,
  //       filter: "Alpha(opacity=50)",
  //     }
  //   }
  // });

/*
  $("#sidebar-left").simplerSidebar({
    animation: {
      duration: 500,
      easing: "swing"
    }
  });

  $("#sidebar-left").simplerSidebar({
    sidebar: {
      width: 300,
    }
  });

  $("#sidebar-left").simplerSidebar({
    events: {
      // on: {
      //   animation: {
      //     open: function () {},
      //     close: function () {},
      //     both: function () {},
      //   },
      // },

      on: {
        animation: {
          open: function () {
            showMask();
            changeSidebarStatus("opened");

            cfg.events.on.animation.open();
          },
          close: function () {
            hideMask();
            changeSidebarStatus("closed");

            cfg.events.on.animation.close();
          },
          both: function () {
            cfg.events.on.animation.both();
          },
        },
      },

      callbacks: {
        // animation: {
        //   open: function () {},
        //   close: function () {},
        //   both: function () {},
        //   freezePage: true,
        // },

        animation: {
          open: function () {
            if (scrollCfg) {
              freezePage();
            }

            cfg.events.callbacks.animation.open();
          },
          close: function () {
            if (scrollCfg) {
              unfreezePage();
            }

            cfg.events.callbacks.animation.close();
          },
          both: function () {
            cfg.events.callbacks.animation.both();
          },
        },

      },
    }
  });

  $("#sidebar-left").simplerSidebar({
    attr: "simplersidebar",
    top: 0,
    gap: 64,
    zIndex: 3000
  });




  // Closes entire Filters card via 'x' on the upper right corner of this card
  $('.close').on('click', function(){
    $('#showFindingTalentFilter').animate({'width':'toggle'}, 500)
  })

  // Resets filtered profiles via 'x' near button 'Show Filters' on talent/index
  $('.apply-filters').on('click', function(e){
    e.preventDefault();
    $('.close-x').attr('hidden', false)
  })

  // Hides 'x' near button 'Show Filters' on talent/index after 'x' is clicked
  $('.close-x').on('click', function(e){
    e.preventDefault();
    $('.close-x').attr('hidden', true)
  })

  // Hides 'x' near button 'Show Filters' on talent/index after 'Reset Filters' button on Filters Card is clicked
  $('.reset-filters').on('click', function(e){
    e.preventDefault();
    $('.close-x').attr('hidden', true)
  })

  // Sets placeholder 'Any' in select2 input fields
  let selects = $('.select2').select2({
    placeholder: "Any"
  });

  // Collapses Filters card left-right, not up-down
  $('[data-toggle="slide-collapse"]').on('click', function() {
    let $navMenuCont = $($(this).data('target'));
    $navMenuCont.animate({'width':'toggle'}, 350);
  });

  // Sends ajax request to render profile selected filters
  $('.btn-primary').on('click', function (e){
    e.preventDefault();
    let real_estate_skills_descriptions = $('#real_estate_skills_descriptions').val();
    let sectors_descriptions = $('#sectors_descriptions').val();
    let softwares_descriptions = $('#softwares_descriptions').val();
    $.ajax({
      method: "POST",
      url: "<%= employer_filter_freelancer_profiles_path %>",
      data: { real_estate_skills_descriptions, sectors_descriptions, softwares_descriptions}
    })
  })
  // Resets select2 filters on Filter card when button 'Reset Filters' is clicked
  $('.reset-filters').on('click', function (e){
    e.preventDefault();
    selects.val(null).trigger("change");
    $.ajax({
      method: "POST",
      url: "<%= employer_filter_freelancer_profiles_path %>",
      data: { }
    })
  })
  */
</script>

