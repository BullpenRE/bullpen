<nav class="navbar navbar-expand-lg navbar-dark bg-header mb-md-5">
  <div class="container">
    <div class="text-left mt-2 mb-2 ml-md-5">
      <%= link_to image_pack_tag('media/images/bullpen-logo-white.png', size: '95x30'), join_path %>
    </div>
  </div>
</nav>

<div class="row justify-content-center log-in-container">

  <div class="card col-md-5 shadow-sm align-items-center">
    <div class="h1 mt-4 text-secondary text-center">Log In</div>
    <div class="col-md-10 px-4 py-4">
      <%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
        <div class="field mb-3">
          <%= f.label :email, class: 'h4 text-secondary text-left' %><br />
          <%= f.email_field :email, autofocus: true, autocomplete: "email", class: 'form-control bg-white border-gray-dark', placeholder: "Email address", id: "user_email"%>
        </div>

        <div class="field">
          <%= f.label :password, class: 'h4 text-secondary' %><br />
          <%= f.password_field :password, autocomplete: "current-password", class: 'form-control bg-white border-gray-dark', placeholder: "Password", id: "user_password" %>
        </div>

        <div class="field text-center mb-3">
          <%= link_to "Forgot password?", new_password_path(resource_name), class: "text-center text-muted" %><br />
        </div>

        <div class="actions">
          <%= f.submit "Login", class: "btn btn-primary col-md-12" %>
        </div>
      <% end %>
    </div>
    <div class="bg-white card-footer text-center">
      <%= render "devise/shared/links" %>
    </div>
  </div>
</div>

<script>
    $(function() {
        if (getCookie("email").length > 0) {
            $('#user_email').val(getCookie("email"));
            $('#user_password').trigger('focus');
            deleteCookie("email");
        };
    });
  function setCookie(name, value, options = {}) {

      options = {
          path: '/'
      };

      if (options.expires instanceof Date) {
          options.expires = options.expires.toUTCString();
      }

      let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);

      for (let optionKey in options) {
          updatedCookie += "; " + optionKey;
          let optionValue = options[optionKey];
          if (optionValue !== true) {
              updatedCookie += "=" + optionValue;
          }
      }

      document.cookie = updatedCookie;
  }

  function getCookie(name) {
      let matches = document.cookie.match(new RegExp(
          "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
      ));
      return matches ? decodeURIComponent(matches[1]) : undefined;
  };

  function deleteCookie(name) {
      setCookie(name, "", {
          'max-age': -1
      })
  };
</script>
